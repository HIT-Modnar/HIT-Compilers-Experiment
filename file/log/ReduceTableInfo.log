0	#	R3: P -> $ 
5	=	R26: L -> id 
5	[	R26: L -> id 
6	#	R3: P -> $ 
7	#	R3: P -> $ 
8	#	R0: Program -> P 
12	!	R49: W -> $ 
12	(	R49: W -> $ 
12	CBOOL	R49: W -> $ 
12	CINT	R49: W -> $ 
12	id	R49: W -> $ 
13	id	R17: C -> $ 
14	[	R15: X -> float 
14	id	R15: X -> float 
15	[	R14: X -> int 
15	id	R14: X -> int 
16	;	R9: A -> $ 
18	id	R15: X -> float 
19	id	R14: X -> int 
23	#	R1: P -> D P 
24	#	R2: P -> S P 
28	{	R39: B -> CBOOL 
30	!=	R28: E -> G 
30	+	R28: E -> G 
30	<	R28: E -> G 
30	<=	R28: E -> G 
30	==	R28: E -> G 
30	>	R28: E -> G 
30	>=	R28: E -> G 
31	!=	R32: F -> CINT 
31	*	R32: F -> CINT 
31	+	R32: F -> CINT 
31	<	R32: F -> CINT 
31	<=	R32: F -> CINT 
31	==	R32: F -> CINT 
31	>	R32: F -> CINT 
31	>=	R32: F -> CINT 
32	!=	R33: F -> id 
32	*	R33: F -> id 
32	+	R33: F -> id 
32	<	R33: F -> id 
32	<=	R33: F -> id 
32	==	R33: F -> id 
32	>	R33: F -> id 
32	>=	R33: F -> id 
33	!=	R30: G -> F 
33	*	R30: G -> F 
33	+	R30: G -> F 
33	<	R30: G -> F 
33	<=	R30: G -> F 
33	==	R30: G -> F 
33	>	R30: G -> F 
33	>=	R30: G -> F 
36	+	R28: E -> G 
36	;	R28: E -> G 
38	*	R32: F -> CINT 
38	+	R32: F -> CINT 
38	;	R32: F -> CINT 
39	*	R33: F -> id 
39	+	R33: F -> id 
39	;	R33: F -> id 
40	*	R30: G -> F 
40	+	R30: G -> F 
40	;	R30: G -> F 
43	id	R13: T -> X C 
48	}	R3: P -> $ 
52	{	R36: B -> ! B 
56	&&	R39: B -> CBOOL 
56	)	R39: B -> CBOOL 
56	||	R39: B -> CBOOL 
58	!=	R28: E -> G 
58	)	R28: E -> G 
58	+	R28: E -> G 
58	<	R28: E -> G 
58	<=	R28: E -> G 
58	==	R28: E -> G 
58	>	R28: E -> G 
58	>=	R28: E -> G 
59	!=	R32: F -> CINT 
59	)	R32: F -> CINT 
59	*	R32: F -> CINT 
59	+	R32: F -> CINT 
59	<	R32: F -> CINT 
59	<=	R32: F -> CINT 
59	==	R32: F -> CINT 
59	>	R32: F -> CINT 
59	>=	R32: F -> CINT 
60	!=	R33: F -> id 
60	)	R33: F -> id 
60	*	R33: F -> id 
60	+	R33: F -> id 
60	<	R33: F -> id 
60	<=	R33: F -> id 
60	==	R33: F -> id 
60	>	R33: F -> id 
60	>=	R33: F -> id 
61	!=	R30: G -> F 
61	)	R30: G -> F 
61	*	R30: G -> F 
61	+	R30: G -> F 
61	<	R30: G -> F 
61	<=	R30: G -> F 
61	==	R30: G -> F 
61	>	R30: G -> F 
61	>=	R30: G -> F 
64	(	R45: relop -> != 
64	CINT	R45: relop -> != 
64	id	R45: relop -> != 
65	(	R40: relop -> < 
65	CINT	R40: relop -> < 
65	id	R40: relop -> < 
66	(	R41: relop -> <= 
66	CINT	R41: relop -> <= 
66	id	R41: relop -> <= 
67	(	R44: relop -> == 
67	CINT	R44: relop -> == 
67	id	R44: relop -> == 
68	(	R42: relop -> > 
68	CINT	R42: relop -> > 
68	id	R42: relop -> > 
69	(	R43: relop -> >= 
69	CINT	R43: relop -> >= 
69	id	R43: relop -> >= 
71	call	R49: W -> $ 
71	id	R49: W -> $ 
71	if	R49: W -> $ 
71	return	R49: W -> $ 
71	while	R49: W -> $ 
73	#	R24: S -> return E ; 
73	call	R24: S -> return E ; 
73	float	R24: S -> return E ; 
73	id	R24: S -> return E ; 
73	if	R24: S -> return E ; 
73	int	R24: S -> return E ; 
73	proc	R24: S -> return E ; 
73	record	R24: S -> return E ; 
73	return	R24: S -> return E ; 
73	while	R24: S -> return E ; 
76	)	R28: E -> G 
76	+	R28: E -> G 
78	)	R32: F -> CINT 
78	*	R32: F -> CINT 
78	+	R32: F -> CINT 
79	)	R33: F -> id 
79	*	R33: F -> id 
79	+	R33: F -> id 
80	)	R30: G -> F 
80	*	R30: G -> F 
80	+	R30: G -> F 
83	;	R9: A -> $ 
84	;	R9: A -> $ 
86	,	R32: F -> CINT 
86	;	R32: F -> CINT 
86	=	R32: F -> CINT 
87	,	R33: F -> id 
87	;	R33: F -> id 
87	=	R33: F -> id 
88	#	R5: D -> T id A ; 
88	call	R5: D -> T id A ; 
88	float	R5: D -> T id A ; 
88	id	R5: D -> T id A ; 
88	if	R5: D -> T id A ; 
88	int	R5: D -> T id A ; 
88	proc	R5: D -> T id A ; 
88	record	R5: D -> T id A ; 
88	return	R5: D -> T id A ; 
88	while	R5: D -> T id A ; 
89	)	R12: M -> $ 
89	,	R12: M -> $ 
95	}	R3: P -> $ 
96	}	R3: P -> $ 
100	!	R49: W -> $ 
100	(	R49: W -> $ 
100	CBOOL	R49: W -> $ 
100	CINT	R49: W -> $ 
100	id	R49: W -> $ 
101	=	R25: L -> L [ CINT ] 
101	[	R25: L -> L [ CINT ] 
102	#	R18: S -> L = E ; 
102	call	R18: S -> L = E ; 
102	float	R18: S -> L = E ; 
102	id	R18: S -> L = E ; 
102	if	R18: S -> L = E ; 
102	int	R18: S -> L = E ; 
102	proc	R18: S -> L = E ; 
102	record	R18: S -> L = E ; 
102	return	R18: S -> L = E ; 
102	while	R18: S -> L = E ; 
103	)	R47: Elist -> E 
103	,	R47: Elist -> E 
104	)	R28: E -> G 
104	+	R28: E -> G 
104	,	R28: E -> G 
107	)	R32: F -> CINT 
107	*	R32: F -> CINT 
107	+	R32: F -> CINT 
107	,	R32: F -> CINT 
108	)	R33: F -> id 
108	*	R33: F -> id 
108	+	R33: F -> id 
108	,	R33: F -> id 
109	)	R30: G -> F 
109	*	R30: G -> F 
109	+	R30: G -> F 
109	,	R30: G -> F 
110	!	R48: Q -> $ 
110	(	R48: Q -> $ 
110	CBOOL	R48: Q -> $ 
110	CINT	R48: Q -> $ 
110	id	R48: Q -> $ 
111	{	R37: B -> ( B ) 
112	!	R48: Q -> $ 
112	(	R48: Q -> $ 
112	CBOOL	R48: Q -> $ 
112	CINT	R48: Q -> $ 
112	id	R48: Q -> $ 
113	&&	R36: B -> ! B 
113	)	R36: B -> ! B 
113	||	R36: B -> ! B 
120	!=	R31: F -> ( E ) 
120	*	R31: F -> ( E ) 
120	+	R31: F -> ( E ) 
120	<	R31: F -> ( E ) 
120	<=	R31: F -> ( E ) 
120	==	R31: F -> ( E ) 
120	>	R31: F -> ( E ) 
120	>=	R31: F -> ( E ) 
122	{	R38: B -> E relop E 
123	+	R28: E -> G 
123	{	R28: E -> G 
125	*	R32: F -> CINT 
125	+	R32: F -> CINT 
125	{	R32: F -> CINT 
126	*	R33: F -> id 
126	+	R33: F -> id 
126	{	R33: F -> id 
127	*	R30: G -> F 
127	+	R30: G -> F 
127	{	R30: G -> F 
128	!=	R27: E -> E + G 
128	+	R27: E -> E + G 
128	<	R27: E -> E + G 
128	<=	R27: E -> E + G 
128	==	R27: E -> E + G 
128	>	R27: E -> E + G 
128	>=	R27: E -> E + G 
130	!=	R29: G -> G * F 
130	*	R29: G -> G * F 
130	+	R29: G -> G * F 
130	<	R29: G -> G * F 
130	<=	R29: G -> G * F 
130	==	R29: G -> G * F 
130	>	R29: G -> G * F 
130	>=	R29: G -> G * F 
132	+	R27: E -> E + G 
132	;	R27: E -> E + G 
133	*	R29: G -> G * F 
133	+	R29: G -> G * F 
133	;	R29: G -> G * F 
135	*	R31: F -> ( E ) 
135	+	R31: F -> ( E ) 
135	;	R31: F -> ( E ) 
138	call	R49: W -> $ 
138	id	R49: W -> $ 
138	if	R49: W -> $ 
138	return	R49: W -> $ 
138	while	R49: W -> $ 
139	id	R17: C -> $ 
140	;	R8: A -> , id A 
141	;	R7: A -> = F A 
145	;	R9: A -> $ 
148	#	R6: D -> record id { P } 
148	call	R6: D -> record id { P } 
148	float	R6: D -> record id { P } 
148	id	R6: D -> record id { P } 
148	if	R6: D -> record id { P } 
148	int	R6: D -> record id { P } 
148	proc	R6: D -> record id { P } 
148	record	R6: D -> record id { P } 
148	return	R6: D -> record id { P } 
148	while	R6: D -> record id { P } 
150	}	R1: P -> D P 
151	}	R2: P -> S P 
163	!	R48: Q -> $ 
163	(	R48: Q -> $ 
163	CBOOL	R48: Q -> $ 
163	CINT	R48: Q -> $ 
163	id	R48: Q -> $ 
164	&&	R37: B -> ( B ) 
164	)	R37: B -> ( B ) 
164	||	R37: B -> ( B ) 
165	!	R48: Q -> $ 
165	(	R48: Q -> $ 
165	CBOOL	R48: Q -> $ 
165	CINT	R48: Q -> $ 
165	id	R48: Q -> $ 
166	!=	R31: F -> ( E ) 
166	)	R31: F -> ( E ) 
166	*	R31: F -> ( E ) 
166	+	R31: F -> ( E ) 
166	<	R31: F -> ( E ) 
166	<=	R31: F -> ( E ) 
166	==	R31: F -> ( E ) 
166	>	R31: F -> ( E ) 
166	>=	R31: F -> ( E ) 
167	&&	R38: B -> E relop E 
167	)	R38: B -> E relop E 
167	||	R38: B -> E relop E 
168	&&	R28: E -> G 
168	)	R28: E -> G 
168	+	R28: E -> G 
168	||	R28: E -> G 
170	&&	R32: F -> CINT 
170	)	R32: F -> CINT 
170	*	R32: F -> CINT 
170	+	R32: F -> CINT 
170	||	R32: F -> CINT 
171	&&	R33: F -> id 
171	)	R33: F -> id 
171	*	R33: F -> id 
171	+	R33: F -> id 
171	||	R33: F -> id 
172	&&	R30: G -> F 
172	)	R30: G -> F 
172	*	R30: G -> F 
172	+	R30: G -> F 
172	||	R30: G -> F 
173	!=	R27: E -> E + G 
173	)	R27: E -> E + G 
173	+	R27: E -> E + G 
173	<	R27: E -> E + G 
173	<=	R27: E -> E + G 
173	==	R27: E -> E + G 
173	>	R27: E -> E + G 
173	>=	R27: E -> E + G 
175	!=	R29: G -> G * F 
175	)	R29: G -> G * F 
175	*	R29: G -> G * F 
175	+	R29: G -> G * F 
175	<	R29: G -> G * F 
175	<=	R29: G -> G * F 
175	==	R29: G -> G * F 
175	>	R29: G -> G * F 
175	>=	R29: G -> G * F 
184	!	R49: W -> $ 
184	(	R49: W -> $ 
184	CBOOL	R49: W -> $ 
184	CINT	R49: W -> $ 
184	id	R49: W -> $ 
185	}	R50: N -> $ 
186	)	R27: E -> E + G 
186	+	R27: E -> E + G 
187	)	R29: G -> G * F 
187	*	R29: G -> G * F 
187	+	R29: G -> G * F 
188	)	R31: F -> ( E ) 
188	*	R31: F -> ( E ) 
188	+	R31: F -> ( E ) 
190	id	R16: C -> [ CINT ] C 
191	,	R31: F -> ( E ) 
191	;	R31: F -> ( E ) 
191	=	R31: F -> ( E ) 
194	)	R11: M -> X id 
194	,	R11: M -> X id 
197	}	R3: P -> $ 
200	call	R49: W -> $ 
200	id	R49: W -> $ 
200	if	R49: W -> $ 
200	return	R49: W -> $ 
200	while	R49: W -> $ 
201	call	R24: S -> return E ; 
201	float	R24: S -> return E ; 
201	id	R24: S -> return E ; 
201	if	R24: S -> return E ; 
201	int	R24: S -> return E ; 
201	proc	R24: S -> return E ; 
201	record	R24: S -> return E ; 
201	return	R24: S -> return E ; 
201	while	R24: S -> return E ; 
201	}	R24: S -> return E ; 
203	)	R27: E -> E + G 
203	+	R27: E -> E + G 
203	,	R27: E -> E + G 
204	)	R29: G -> G * F 
204	*	R29: G -> G * F 
204	+	R29: G -> G * F 
204	,	R29: G -> G * F 
205	)	R46: Elist -> Elist , E 
205	,	R46: Elist -> Elist , E 
206	#	R23: S -> call id ( Elist ) ; 
206	call	R23: S -> call id ( Elist ) ; 
206	float	R23: S -> call id ( Elist ) ; 
206	id	R23: S -> call id ( Elist ) ; 
206	if	R23: S -> call id ( Elist ) ; 
206	int	R23: S -> call id ( Elist ) ; 
206	proc	R23: S -> call id ( Elist ) ; 
206	record	R23: S -> call id ( Elist ) ; 
206	return	R23: S -> call id ( Elist ) ; 
206	while	R23: S -> call id ( Elist ) ; 
207	)	R31: F -> ( E ) 
207	*	R31: F -> ( E ) 
207	+	R31: F -> ( E ) 
207	,	R31: F -> ( E ) 
211	)	R39: B -> CBOOL 
220	+	R27: E -> E + G 
220	{	R27: E -> E + G 
221	*	R29: G -> G * F 
221	+	R29: G -> G * F 
221	{	R29: G -> G * F 
222	*	R31: F -> ( E ) 
222	+	R31: F -> ( E ) 
222	{	R31: F -> ( E ) 
230	}	R3: P -> $ 
232	call	R5: D -> T id A ; 
232	float	R5: D -> T id A ; 
232	id	R5: D -> T id A ; 
232	if	R5: D -> T id A ; 
232	int	R5: D -> T id A ; 
232	proc	R5: D -> T id A ; 
232	record	R5: D -> T id A ; 
232	return	R5: D -> T id A ; 
232	while	R5: D -> T id A ; 
232	}	R5: D -> T id A ; 
233	)	R12: M -> $ 
233	,	R12: M -> $ 
235	call	R18: S -> L = E ; 
235	float	R18: S -> L = E ; 
235	id	R18: S -> L = E ; 
235	if	R18: S -> L = E ; 
235	int	R18: S -> L = E ; 
235	proc	R18: S -> L = E ; 
235	record	R18: S -> L = E ; 
235	return	R18: S -> L = E ; 
235	while	R18: S -> L = E ; 
235	}	R18: S -> L = E ; 
238	call	R49: W -> $ 
238	id	R49: W -> $ 
238	if	R49: W -> $ 
238	return	R49: W -> $ 
238	while	R49: W -> $ 
239	{	R35: B -> ( B && Q B ) 
240	)	R36: B -> ! B 
243	{	R34: B -> ( B || Q B ) 
246	&&	R27: E -> E + G 
246	)	R27: E -> E + G 
246	+	R27: E -> E + G 
246	||	R27: E -> E + G 
247	&&	R29: G -> G * F 
247	)	R29: G -> G * F 
247	*	R29: G -> G * F 
247	+	R29: G -> G * F 
247	||	R29: G -> G * F 
248	&&	R31: F -> ( E ) 
248	)	R31: F -> ( E ) 
248	*	R31: F -> ( E ) 
248	+	R31: F -> ( E ) 
248	||	R31: F -> ( E ) 
251	call	R49: W -> $ 
251	id	R49: W -> $ 
251	if	R49: W -> $ 
251	return	R49: W -> $ 
251	while	R49: W -> $ 
252	}	R24: S -> return E ; 
254	#	R21: R -> $ 
254	call	R21: R -> $ 
254	float	R21: R -> $ 
254	id	R21: R -> $ 
254	if	R21: R -> $ 
254	int	R21: R -> $ 
254	proc	R21: R -> $ 
254	record	R21: R -> $ 
254	return	R21: R -> $ 
254	while	R21: R -> $ 
255	#	R22: S -> while W B { W S } 
255	call	R22: S -> while W B { W S } 
255	float	R22: S -> while W B { W S } 
255	id	R22: S -> while W B { W S } 
255	if	R22: S -> while W B { W S } 
255	int	R22: S -> while W B { W S } 
255	proc	R22: S -> while W B { W S } 
255	record	R22: S -> while W B { W S } 
255	return	R22: S -> while W B { W S } 
255	while	R22: S -> while W B { W S } 
257	)	R10: M -> M , X id 
257	,	R10: M -> M , X id 
259	call	R6: D -> record id { P } 
259	float	R6: D -> record id { P } 
259	id	R6: D -> record id { P } 
259	if	R6: D -> record id { P } 
259	int	R6: D -> record id { P } 
259	proc	R6: D -> record id { P } 
259	record	R6: D -> record id { P } 
259	return	R6: D -> record id { P } 
259	while	R6: D -> record id { P } 
259	}	R6: D -> record id { P } 
261	}	R50: N -> $ 
263	!	R48: Q -> $ 
263	(	R48: Q -> $ 
263	CBOOL	R48: Q -> $ 
263	CINT	R48: Q -> $ 
263	id	R48: Q -> $ 
264	)	R37: B -> ( B ) 
265	!	R48: Q -> $ 
265	(	R48: Q -> $ 
265	CBOOL	R48: Q -> $ 
265	CINT	R48: Q -> $ 
265	id	R48: Q -> $ 
266	)	R38: B -> E relop E 
267	&&	R35: B -> ( B && Q B ) 
267	)	R35: B -> ( B && Q B ) 
267	||	R35: B -> ( B && Q B ) 
268	&&	R34: B -> ( B || Q B ) 
268	)	R34: B -> ( B || Q B ) 
268	||	R34: B -> ( B || Q B ) 
269	}	R18: S -> L = E ; 
272	call	R49: W -> $ 
272	id	R49: W -> $ 
272	if	R49: W -> $ 
272	return	R49: W -> $ 
272	while	R49: W -> $ 
274	#	R19: S -> if B { W S N } R 
274	call	R19: S -> if B { W S N } R 
274	float	R19: S -> if B { W S N } R 
274	id	R19: S -> if B { W S N } R 
274	if	R19: S -> if B { W S N } R 
274	int	R19: S -> if B { W S N } R 
274	proc	R19: S -> if B { W S N } R 
274	record	R19: S -> if B { W S N } R 
274	return	R19: S -> if B { W S N } R 
274	while	R19: S -> if B { W S N } R 
275	#	R4: D -> proc X id ( M ) { P } 
275	call	R4: D -> proc X id ( M ) { P } 
275	float	R4: D -> proc X id ( M ) { P } 
275	id	R4: D -> proc X id ( M ) { P } 
275	if	R4: D -> proc X id ( M ) { P } 
275	int	R4: D -> proc X id ( M ) { P } 
275	proc	R4: D -> proc X id ( M ) { P } 
275	record	R4: D -> proc X id ( M ) { P } 
275	return	R4: D -> proc X id ( M ) { P } 
275	while	R4: D -> proc X id ( M ) { P } 
277	call	R23: S -> call id ( Elist ) ; 
277	float	R23: S -> call id ( Elist ) ; 
277	id	R23: S -> call id ( Elist ) ; 
277	if	R23: S -> call id ( Elist ) ; 
277	int	R23: S -> call id ( Elist ) ; 
277	proc	R23: S -> call id ( Elist ) ; 
277	record	R23: S -> call id ( Elist ) ; 
277	return	R23: S -> call id ( Elist ) ; 
277	while	R23: S -> call id ( Elist ) ; 
277	}	R23: S -> call id ( Elist ) ; 
283	}	R50: N -> $ 
285	call	R49: W -> $ 
285	id	R49: W -> $ 
285	if	R49: W -> $ 
285	return	R49: W -> $ 
285	while	R49: W -> $ 
286	}	R3: P -> $ 
287	call	R21: R -> $ 
287	float	R21: R -> $ 
287	id	R21: R -> $ 
287	if	R21: R -> $ 
287	int	R21: R -> $ 
287	proc	R21: R -> $ 
287	record	R21: R -> $ 
287	return	R21: R -> $ 
287	while	R21: R -> $ 
287	}	R21: R -> $ 
288	call	R22: S -> while W B { W S } 
288	float	R22: S -> while W B { W S } 
288	id	R22: S -> while W B { W S } 
288	if	R22: S -> while W B { W S } 
288	int	R22: S -> while W B { W S } 
288	proc	R22: S -> while W B { W S } 
288	record	R22: S -> while W B { W S } 
288	return	R22: S -> while W B { W S } 
288	while	R22: S -> while W B { W S } 
288	}	R22: S -> while W B { W S } 
291	}	R23: S -> call id ( Elist ) ; 
297	call	R19: S -> if B { W S N } R 
297	float	R19: S -> if B { W S N } R 
297	id	R19: S -> if B { W S N } R 
297	if	R19: S -> if B { W S N } R 
297	int	R19: S -> if B { W S N } R 
297	proc	R19: S -> if B { W S N } R 
297	record	R19: S -> if B { W S N } R 
297	return	R19: S -> if B { W S N } R 
297	while	R19: S -> if B { W S N } R 
297	}	R19: S -> if B { W S N } R 
298	)	R35: B -> ( B && Q B ) 
299	)	R34: B -> ( B || Q B ) 
300	}	R21: R -> $ 
301	}	R22: S -> while W B { W S } 
303	call	R4: D -> proc X id ( M ) { P } 
303	float	R4: D -> proc X id ( M ) { P } 
303	id	R4: D -> proc X id ( M ) { P } 
303	if	R4: D -> proc X id ( M ) { P } 
303	int	R4: D -> proc X id ( M ) { P } 
303	proc	R4: D -> proc X id ( M ) { P } 
303	record	R4: D -> proc X id ( M ) { P } 
303	return	R4: D -> proc X id ( M ) { P } 
303	while	R4: D -> proc X id ( M ) { P } 
303	}	R4: D -> proc X id ( M ) { P } 
304	call	R49: W -> $ 
304	id	R49: W -> $ 
304	if	R49: W -> $ 
304	return	R49: W -> $ 
304	while	R49: W -> $ 
306	}	R19: S -> if B { W S N } R 
307	#	R20: R -> else { W S } 
307	call	R20: R -> else { W S } 
307	float	R20: R -> else { W S } 
307	id	R20: R -> else { W S } 
307	if	R20: R -> else { W S } 
307	int	R20: R -> else { W S } 
307	proc	R20: R -> else { W S } 
307	record	R20: R -> else { W S } 
307	return	R20: R -> else { W S } 
307	while	R20: R -> else { W S } 
309	call	R49: W -> $ 
309	id	R49: W -> $ 
309	if	R49: W -> $ 
309	return	R49: W -> $ 
309	while	R49: W -> $ 
312	call	R20: R -> else { W S } 
312	float	R20: R -> else { W S } 
312	id	R20: R -> else { W S } 
312	if	R20: R -> else { W S } 
312	int	R20: R -> else { W S } 
312	proc	R20: R -> else { W S } 
312	record	R20: R -> else { W S } 
312	return	R20: R -> else { W S } 
312	while	R20: R -> else { W S } 
312	}	R20: R -> else { W S } 
314	}	R20: R -> else { W S } 
