0	#	R3: P -> $ 
5	=	R26: L -> id 
5	[	R26: L -> id 
6	#	R3: P -> $ 
7	#	R3: P -> $ 
8	#	R0: Program -> P 
12	!	R49: W -> $ 
12	(	R49: W -> $ 
12	CBOOL	R49: W -> $ 
12	CFLOAT	R49: W -> $ 
12	CINT	R49: W -> $ 
12	id	R49: W -> $ 
13	id	R17: C -> $ 
14	[	R15: X -> float 
14	id	R15: X -> float 
15	[	R14: X -> int 
15	id	R14: X -> int 
16	;	R9: A -> $ 
18	id	R15: X -> float 
19	id	R14: X -> int 
23	#	R1: P -> D P 
24	#	R2: P -> S P 
28	{	R39: B -> CBOOL 
30	!=	R28: E -> G 
30	+	R28: E -> G 
30	<	R28: E -> G 
30	<=	R28: E -> G 
30	==	R28: E -> G 
30	>	R28: E -> G 
30	>=	R28: E -> G 
31	!=	R51: F -> CFLOAT 
31	*	R51: F -> CFLOAT 
31	+	R51: F -> CFLOAT 
31	<	R51: F -> CFLOAT 
31	<=	R51: F -> CFLOAT 
31	==	R51: F -> CFLOAT 
31	>	R51: F -> CFLOAT 
31	>=	R51: F -> CFLOAT 
32	!=	R32: F -> CINT 
32	*	R32: F -> CINT 
32	+	R32: F -> CINT 
32	<	R32: F -> CINT 
32	<=	R32: F -> CINT 
32	==	R32: F -> CINT 
32	>	R32: F -> CINT 
32	>=	R32: F -> CINT 
33	!=	R33: F -> id 
33	*	R33: F -> id 
33	+	R33: F -> id 
33	<	R33: F -> id 
33	<=	R33: F -> id 
33	==	R33: F -> id 
33	>	R33: F -> id 
33	>=	R33: F -> id 
34	!=	R30: G -> F 
34	*	R30: G -> F 
34	+	R30: G -> F 
34	<	R30: G -> F 
34	<=	R30: G -> F 
34	==	R30: G -> F 
34	>	R30: G -> F 
34	>=	R30: G -> F 
37	+	R28: E -> G 
37	;	R28: E -> G 
39	*	R51: F -> CFLOAT 
39	+	R51: F -> CFLOAT 
39	;	R51: F -> CFLOAT 
40	*	R32: F -> CINT 
40	+	R32: F -> CINT 
40	;	R32: F -> CINT 
41	*	R33: F -> id 
41	+	R33: F -> id 
41	;	R33: F -> id 
42	*	R30: G -> F 
42	+	R30: G -> F 
42	;	R30: G -> F 
45	id	R13: T -> X C 
50	}	R3: P -> $ 
54	{	R36: B -> ! B 
58	&&	R39: B -> CBOOL 
58	)	R39: B -> CBOOL 
58	||	R39: B -> CBOOL 
60	!=	R28: E -> G 
60	)	R28: E -> G 
60	+	R28: E -> G 
60	<	R28: E -> G 
60	<=	R28: E -> G 
60	==	R28: E -> G 
60	>	R28: E -> G 
60	>=	R28: E -> G 
61	!=	R51: F -> CFLOAT 
61	)	R51: F -> CFLOAT 
61	*	R51: F -> CFLOAT 
61	+	R51: F -> CFLOAT 
61	<	R51: F -> CFLOAT 
61	<=	R51: F -> CFLOAT 
61	==	R51: F -> CFLOAT 
61	>	R51: F -> CFLOAT 
61	>=	R51: F -> CFLOAT 
62	!=	R32: F -> CINT 
62	)	R32: F -> CINT 
62	*	R32: F -> CINT 
62	+	R32: F -> CINT 
62	<	R32: F -> CINT 
62	<=	R32: F -> CINT 
62	==	R32: F -> CINT 
62	>	R32: F -> CINT 
62	>=	R32: F -> CINT 
63	!=	R33: F -> id 
63	)	R33: F -> id 
63	*	R33: F -> id 
63	+	R33: F -> id 
63	<	R33: F -> id 
63	<=	R33: F -> id 
63	==	R33: F -> id 
63	>	R33: F -> id 
63	>=	R33: F -> id 
64	!=	R30: G -> F 
64	)	R30: G -> F 
64	*	R30: G -> F 
64	+	R30: G -> F 
64	<	R30: G -> F 
64	<=	R30: G -> F 
64	==	R30: G -> F 
64	>	R30: G -> F 
64	>=	R30: G -> F 
67	(	R45: relop -> != 
67	CFLOAT	R45: relop -> != 
67	CINT	R45: relop -> != 
67	id	R45: relop -> != 
68	(	R40: relop -> < 
68	CFLOAT	R40: relop -> < 
68	CINT	R40: relop -> < 
68	id	R40: relop -> < 
69	(	R41: relop -> <= 
69	CFLOAT	R41: relop -> <= 
69	CINT	R41: relop -> <= 
69	id	R41: relop -> <= 
70	(	R44: relop -> == 
70	CFLOAT	R44: relop -> == 
70	CINT	R44: relop -> == 
70	id	R44: relop -> == 
71	(	R42: relop -> > 
71	CFLOAT	R42: relop -> > 
71	CINT	R42: relop -> > 
71	id	R42: relop -> > 
72	(	R43: relop -> >= 
72	CFLOAT	R43: relop -> >= 
72	CINT	R43: relop -> >= 
72	id	R43: relop -> >= 
74	call	R49: W -> $ 
74	id	R49: W -> $ 
74	if	R49: W -> $ 
74	return	R49: W -> $ 
74	while	R49: W -> $ 
76	#	R24: S -> return E ; 
76	call	R24: S -> return E ; 
76	float	R24: S -> return E ; 
76	id	R24: S -> return E ; 
76	if	R24: S -> return E ; 
76	int	R24: S -> return E ; 
76	proc	R24: S -> return E ; 
76	record	R24: S -> return E ; 
76	return	R24: S -> return E ; 
76	while	R24: S -> return E ; 
79	)	R28: E -> G 
79	+	R28: E -> G 
81	)	R51: F -> CFLOAT 
81	*	R51: F -> CFLOAT 
81	+	R51: F -> CFLOAT 
82	)	R32: F -> CINT 
82	*	R32: F -> CINT 
82	+	R32: F -> CINT 
83	)	R33: F -> id 
83	*	R33: F -> id 
83	+	R33: F -> id 
84	)	R30: G -> F 
84	*	R30: G -> F 
84	+	R30: G -> F 
87	;	R9: A -> $ 
88	;	R9: A -> $ 
90	,	R51: F -> CFLOAT 
90	;	R51: F -> CFLOAT 
90	=	R51: F -> CFLOAT 
91	,	R32: F -> CINT 
91	;	R32: F -> CINT 
91	=	R32: F -> CINT 
92	,	R33: F -> id 
92	;	R33: F -> id 
92	=	R33: F -> id 
93	#	R5: D -> T id A ; 
93	call	R5: D -> T id A ; 
93	float	R5: D -> T id A ; 
93	id	R5: D -> T id A ; 
93	if	R5: D -> T id A ; 
93	int	R5: D -> T id A ; 
93	proc	R5: D -> T id A ; 
93	record	R5: D -> T id A ; 
93	return	R5: D -> T id A ; 
93	while	R5: D -> T id A ; 
94	)	R12: M -> $ 
94	,	R12: M -> $ 
100	}	R3: P -> $ 
101	}	R3: P -> $ 
105	!	R49: W -> $ 
105	(	R49: W -> $ 
105	CBOOL	R49: W -> $ 
105	CFLOAT	R49: W -> $ 
105	CINT	R49: W -> $ 
105	id	R49: W -> $ 
106	=	R25: L -> L [ CINT ] 
106	[	R25: L -> L [ CINT ] 
107	#	R18: S -> L = E ; 
107	call	R18: S -> L = E ; 
107	float	R18: S -> L = E ; 
107	id	R18: S -> L = E ; 
107	if	R18: S -> L = E ; 
107	int	R18: S -> L = E ; 
107	proc	R18: S -> L = E ; 
107	record	R18: S -> L = E ; 
107	return	R18: S -> L = E ; 
107	while	R18: S -> L = E ; 
108	)	R47: Elist -> E 
108	,	R47: Elist -> E 
109	)	R28: E -> G 
109	+	R28: E -> G 
109	,	R28: E -> G 
112	)	R51: F -> CFLOAT 
112	*	R51: F -> CFLOAT 
112	+	R51: F -> CFLOAT 
112	,	R51: F -> CFLOAT 
113	)	R32: F -> CINT 
113	*	R32: F -> CINT 
113	+	R32: F -> CINT 
113	,	R32: F -> CINT 
114	)	R33: F -> id 
114	*	R33: F -> id 
114	+	R33: F -> id 
114	,	R33: F -> id 
115	)	R30: G -> F 
115	*	R30: G -> F 
115	+	R30: G -> F 
115	,	R30: G -> F 
116	!	R48: Q -> $ 
116	(	R48: Q -> $ 
116	CBOOL	R48: Q -> $ 
116	CFLOAT	R48: Q -> $ 
116	CINT	R48: Q -> $ 
116	id	R48: Q -> $ 
117	{	R37: B -> ( B ) 
118	!	R48: Q -> $ 
118	(	R48: Q -> $ 
118	CBOOL	R48: Q -> $ 
118	CFLOAT	R48: Q -> $ 
118	CINT	R48: Q -> $ 
118	id	R48: Q -> $ 
119	&&	R36: B -> ! B 
119	)	R36: B -> ! B 
119	||	R36: B -> ! B 
126	!=	R31: F -> ( E ) 
126	*	R31: F -> ( E ) 
126	+	R31: F -> ( E ) 
126	<	R31: F -> ( E ) 
126	<=	R31: F -> ( E ) 
126	==	R31: F -> ( E ) 
126	>	R31: F -> ( E ) 
126	>=	R31: F -> ( E ) 
128	{	R38: B -> E relop E 
129	+	R28: E -> G 
129	{	R28: E -> G 
131	*	R51: F -> CFLOAT 
131	+	R51: F -> CFLOAT 
131	{	R51: F -> CFLOAT 
132	*	R32: F -> CINT 
132	+	R32: F -> CINT 
132	{	R32: F -> CINT 
133	*	R33: F -> id 
133	+	R33: F -> id 
133	{	R33: F -> id 
134	*	R30: G -> F 
134	+	R30: G -> F 
134	{	R30: G -> F 
135	!=	R27: E -> E + G 
135	+	R27: E -> E + G 
135	<	R27: E -> E + G 
135	<=	R27: E -> E + G 
135	==	R27: E -> E + G 
135	>	R27: E -> E + G 
135	>=	R27: E -> E + G 
137	!=	R29: G -> G * F 
137	*	R29: G -> G * F 
137	+	R29: G -> G * F 
137	<	R29: G -> G * F 
137	<=	R29: G -> G * F 
137	==	R29: G -> G * F 
137	>	R29: G -> G * F 
137	>=	R29: G -> G * F 
139	+	R27: E -> E + G 
139	;	R27: E -> E + G 
140	*	R29: G -> G * F 
140	+	R29: G -> G * F 
140	;	R29: G -> G * F 
142	*	R31: F -> ( E ) 
142	+	R31: F -> ( E ) 
142	;	R31: F -> ( E ) 
145	call	R49: W -> $ 
145	id	R49: W -> $ 
145	if	R49: W -> $ 
145	return	R49: W -> $ 
145	while	R49: W -> $ 
146	id	R17: C -> $ 
147	;	R8: A -> , id A 
148	;	R7: A -> = F A 
152	;	R9: A -> $ 
155	#	R6: D -> record id { P } 
155	call	R6: D -> record id { P } 
155	float	R6: D -> record id { P } 
155	id	R6: D -> record id { P } 
155	if	R6: D -> record id { P } 
155	int	R6: D -> record id { P } 
155	proc	R6: D -> record id { P } 
155	record	R6: D -> record id { P } 
155	return	R6: D -> record id { P } 
155	while	R6: D -> record id { P } 
157	}	R1: P -> D P 
158	}	R2: P -> S P 
170	!	R48: Q -> $ 
170	(	R48: Q -> $ 
170	CBOOL	R48: Q -> $ 
170	CFLOAT	R48: Q -> $ 
170	CINT	R48: Q -> $ 
170	id	R48: Q -> $ 
171	&&	R37: B -> ( B ) 
171	)	R37: B -> ( B ) 
171	||	R37: B -> ( B ) 
172	!	R48: Q -> $ 
172	(	R48: Q -> $ 
172	CBOOL	R48: Q -> $ 
172	CFLOAT	R48: Q -> $ 
172	CINT	R48: Q -> $ 
172	id	R48: Q -> $ 
173	!=	R31: F -> ( E ) 
173	)	R31: F -> ( E ) 
173	*	R31: F -> ( E ) 
173	+	R31: F -> ( E ) 
173	<	R31: F -> ( E ) 
173	<=	R31: F -> ( E ) 
173	==	R31: F -> ( E ) 
173	>	R31: F -> ( E ) 
173	>=	R31: F -> ( E ) 
174	&&	R38: B -> E relop E 
174	)	R38: B -> E relop E 
174	||	R38: B -> E relop E 
175	&&	R28: E -> G 
175	)	R28: E -> G 
175	+	R28: E -> G 
175	||	R28: E -> G 
177	&&	R51: F -> CFLOAT 
177	)	R51: F -> CFLOAT 
177	*	R51: F -> CFLOAT 
177	+	R51: F -> CFLOAT 
177	||	R51: F -> CFLOAT 
178	&&	R32: F -> CINT 
178	)	R32: F -> CINT 
178	*	R32: F -> CINT 
178	+	R32: F -> CINT 
178	||	R32: F -> CINT 
179	&&	R33: F -> id 
179	)	R33: F -> id 
179	*	R33: F -> id 
179	+	R33: F -> id 
179	||	R33: F -> id 
180	&&	R30: G -> F 
180	)	R30: G -> F 
180	*	R30: G -> F 
180	+	R30: G -> F 
180	||	R30: G -> F 
181	!=	R27: E -> E + G 
181	)	R27: E -> E + G 
181	+	R27: E -> E + G 
181	<	R27: E -> E + G 
181	<=	R27: E -> E + G 
181	==	R27: E -> E + G 
181	>	R27: E -> E + G 
181	>=	R27: E -> E + G 
183	!=	R29: G -> G * F 
183	)	R29: G -> G * F 
183	*	R29: G -> G * F 
183	+	R29: G -> G * F 
183	<	R29: G -> G * F 
183	<=	R29: G -> G * F 
183	==	R29: G -> G * F 
183	>	R29: G -> G * F 
183	>=	R29: G -> G * F 
192	!	R49: W -> $ 
192	(	R49: W -> $ 
192	CBOOL	R49: W -> $ 
192	CFLOAT	R49: W -> $ 
192	CINT	R49: W -> $ 
192	id	R49: W -> $ 
193	}	R50: N -> $ 
194	)	R27: E -> E + G 
194	+	R27: E -> E + G 
195	)	R29: G -> G * F 
195	*	R29: G -> G * F 
195	+	R29: G -> G * F 
196	)	R31: F -> ( E ) 
196	*	R31: F -> ( E ) 
196	+	R31: F -> ( E ) 
198	id	R16: C -> [ CINT ] C 
199	,	R31: F -> ( E ) 
199	;	R31: F -> ( E ) 
199	=	R31: F -> ( E ) 
202	)	R11: M -> X id 
202	,	R11: M -> X id 
205	}	R3: P -> $ 
208	call	R49: W -> $ 
208	id	R49: W -> $ 
208	if	R49: W -> $ 
208	return	R49: W -> $ 
208	while	R49: W -> $ 
209	call	R24: S -> return E ; 
209	float	R24: S -> return E ; 
209	id	R24: S -> return E ; 
209	if	R24: S -> return E ; 
209	int	R24: S -> return E ; 
209	proc	R24: S -> return E ; 
209	record	R24: S -> return E ; 
209	return	R24: S -> return E ; 
209	while	R24: S -> return E ; 
209	}	R24: S -> return E ; 
211	)	R27: E -> E + G 
211	+	R27: E -> E + G 
211	,	R27: E -> E + G 
212	)	R29: G -> G * F 
212	*	R29: G -> G * F 
212	+	R29: G -> G * F 
212	,	R29: G -> G * F 
213	)	R46: Elist -> Elist , E 
213	,	R46: Elist -> Elist , E 
214	#	R23: S -> call id ( Elist ) ; 
214	call	R23: S -> call id ( Elist ) ; 
214	float	R23: S -> call id ( Elist ) ; 
214	id	R23: S -> call id ( Elist ) ; 
214	if	R23: S -> call id ( Elist ) ; 
214	int	R23: S -> call id ( Elist ) ; 
214	proc	R23: S -> call id ( Elist ) ; 
214	record	R23: S -> call id ( Elist ) ; 
214	return	R23: S -> call id ( Elist ) ; 
214	while	R23: S -> call id ( Elist ) ; 
215	)	R31: F -> ( E ) 
215	*	R31: F -> ( E ) 
215	+	R31: F -> ( E ) 
215	,	R31: F -> ( E ) 
219	)	R39: B -> CBOOL 
228	+	R27: E -> E + G 
228	{	R27: E -> E + G 
229	*	R29: G -> G * F 
229	+	R29: G -> G * F 
229	{	R29: G -> G * F 
230	*	R31: F -> ( E ) 
230	+	R31: F -> ( E ) 
230	{	R31: F -> ( E ) 
238	}	R3: P -> $ 
240	call	R5: D -> T id A ; 
240	float	R5: D -> T id A ; 
240	id	R5: D -> T id A ; 
240	if	R5: D -> T id A ; 
240	int	R5: D -> T id A ; 
240	proc	R5: D -> T id A ; 
240	record	R5: D -> T id A ; 
240	return	R5: D -> T id A ; 
240	while	R5: D -> T id A ; 
240	}	R5: D -> T id A ; 
241	)	R12: M -> $ 
241	,	R12: M -> $ 
243	call	R18: S -> L = E ; 
243	float	R18: S -> L = E ; 
243	id	R18: S -> L = E ; 
243	if	R18: S -> L = E ; 
243	int	R18: S -> L = E ; 
243	proc	R18: S -> L = E ; 
243	record	R18: S -> L = E ; 
243	return	R18: S -> L = E ; 
243	while	R18: S -> L = E ; 
243	}	R18: S -> L = E ; 
246	call	R49: W -> $ 
246	id	R49: W -> $ 
246	if	R49: W -> $ 
246	return	R49: W -> $ 
246	while	R49: W -> $ 
247	{	R35: B -> ( B && Q B ) 
248	)	R36: B -> ! B 
251	{	R34: B -> ( B || Q B ) 
254	&&	R27: E -> E + G 
254	)	R27: E -> E + G 
254	+	R27: E -> E + G 
254	||	R27: E -> E + G 
255	&&	R29: G -> G * F 
255	)	R29: G -> G * F 
255	*	R29: G -> G * F 
255	+	R29: G -> G * F 
255	||	R29: G -> G * F 
256	&&	R31: F -> ( E ) 
256	)	R31: F -> ( E ) 
256	*	R31: F -> ( E ) 
256	+	R31: F -> ( E ) 
256	||	R31: F -> ( E ) 
259	call	R49: W -> $ 
259	id	R49: W -> $ 
259	if	R49: W -> $ 
259	return	R49: W -> $ 
259	while	R49: W -> $ 
260	}	R24: S -> return E ; 
262	#	R21: R -> $ 
262	call	R21: R -> $ 
262	float	R21: R -> $ 
262	id	R21: R -> $ 
262	if	R21: R -> $ 
262	int	R21: R -> $ 
262	proc	R21: R -> $ 
262	record	R21: R -> $ 
262	return	R21: R -> $ 
262	while	R21: R -> $ 
263	#	R22: S -> while W B { W S } 
263	call	R22: S -> while W B { W S } 
263	float	R22: S -> while W B { W S } 
263	id	R22: S -> while W B { W S } 
263	if	R22: S -> while W B { W S } 
263	int	R22: S -> while W B { W S } 
263	proc	R22: S -> while W B { W S } 
263	record	R22: S -> while W B { W S } 
263	return	R22: S -> while W B { W S } 
263	while	R22: S -> while W B { W S } 
265	)	R10: M -> M , X id 
265	,	R10: M -> M , X id 
267	call	R6: D -> record id { P } 
267	float	R6: D -> record id { P } 
267	id	R6: D -> record id { P } 
267	if	R6: D -> record id { P } 
267	int	R6: D -> record id { P } 
267	proc	R6: D -> record id { P } 
267	record	R6: D -> record id { P } 
267	return	R6: D -> record id { P } 
267	while	R6: D -> record id { P } 
267	}	R6: D -> record id { P } 
269	}	R50: N -> $ 
271	!	R48: Q -> $ 
271	(	R48: Q -> $ 
271	CBOOL	R48: Q -> $ 
271	CFLOAT	R48: Q -> $ 
271	CINT	R48: Q -> $ 
271	id	R48: Q -> $ 
272	)	R37: B -> ( B ) 
273	!	R48: Q -> $ 
273	(	R48: Q -> $ 
273	CBOOL	R48: Q -> $ 
273	CFLOAT	R48: Q -> $ 
273	CINT	R48: Q -> $ 
273	id	R48: Q -> $ 
274	)	R38: B -> E relop E 
275	&&	R35: B -> ( B && Q B ) 
275	)	R35: B -> ( B && Q B ) 
275	||	R35: B -> ( B && Q B ) 
276	&&	R34: B -> ( B || Q B ) 
276	)	R34: B -> ( B || Q B ) 
276	||	R34: B -> ( B || Q B ) 
277	}	R18: S -> L = E ; 
280	call	R49: W -> $ 
280	id	R49: W -> $ 
280	if	R49: W -> $ 
280	return	R49: W -> $ 
280	while	R49: W -> $ 
282	#	R19: S -> if B { W S N } R 
282	call	R19: S -> if B { W S N } R 
282	float	R19: S -> if B { W S N } R 
282	id	R19: S -> if B { W S N } R 
282	if	R19: S -> if B { W S N } R 
282	int	R19: S -> if B { W S N } R 
282	proc	R19: S -> if B { W S N } R 
282	record	R19: S -> if B { W S N } R 
282	return	R19: S -> if B { W S N } R 
282	while	R19: S -> if B { W S N } R 
283	#	R4: D -> proc X id ( M ) { P } 
283	call	R4: D -> proc X id ( M ) { P } 
283	float	R4: D -> proc X id ( M ) { P } 
283	id	R4: D -> proc X id ( M ) { P } 
283	if	R4: D -> proc X id ( M ) { P } 
283	int	R4: D -> proc X id ( M ) { P } 
283	proc	R4: D -> proc X id ( M ) { P } 
283	record	R4: D -> proc X id ( M ) { P } 
283	return	R4: D -> proc X id ( M ) { P } 
283	while	R4: D -> proc X id ( M ) { P } 
285	call	R23: S -> call id ( Elist ) ; 
285	float	R23: S -> call id ( Elist ) ; 
285	id	R23: S -> call id ( Elist ) ; 
285	if	R23: S -> call id ( Elist ) ; 
285	int	R23: S -> call id ( Elist ) ; 
285	proc	R23: S -> call id ( Elist ) ; 
285	record	R23: S -> call id ( Elist ) ; 
285	return	R23: S -> call id ( Elist ) ; 
285	while	R23: S -> call id ( Elist ) ; 
285	}	R23: S -> call id ( Elist ) ; 
291	}	R50: N -> $ 
293	call	R49: W -> $ 
293	id	R49: W -> $ 
293	if	R49: W -> $ 
293	return	R49: W -> $ 
293	while	R49: W -> $ 
294	}	R3: P -> $ 
295	call	R21: R -> $ 
295	float	R21: R -> $ 
295	id	R21: R -> $ 
295	if	R21: R -> $ 
295	int	R21: R -> $ 
295	proc	R21: R -> $ 
295	record	R21: R -> $ 
295	return	R21: R -> $ 
295	while	R21: R -> $ 
295	}	R21: R -> $ 
296	call	R22: S -> while W B { W S } 
296	float	R22: S -> while W B { W S } 
296	id	R22: S -> while W B { W S } 
296	if	R22: S -> while W B { W S } 
296	int	R22: S -> while W B { W S } 
296	proc	R22: S -> while W B { W S } 
296	record	R22: S -> while W B { W S } 
296	return	R22: S -> while W B { W S } 
296	while	R22: S -> while W B { W S } 
296	}	R22: S -> while W B { W S } 
299	}	R23: S -> call id ( Elist ) ; 
305	call	R19: S -> if B { W S N } R 
305	float	R19: S -> if B { W S N } R 
305	id	R19: S -> if B { W S N } R 
305	if	R19: S -> if B { W S N } R 
305	int	R19: S -> if B { W S N } R 
305	proc	R19: S -> if B { W S N } R 
305	record	R19: S -> if B { W S N } R 
305	return	R19: S -> if B { W S N } R 
305	while	R19: S -> if B { W S N } R 
305	}	R19: S -> if B { W S N } R 
306	)	R35: B -> ( B && Q B ) 
307	)	R34: B -> ( B || Q B ) 
308	}	R21: R -> $ 
309	}	R22: S -> while W B { W S } 
311	call	R4: D -> proc X id ( M ) { P } 
311	float	R4: D -> proc X id ( M ) { P } 
311	id	R4: D -> proc X id ( M ) { P } 
311	if	R4: D -> proc X id ( M ) { P } 
311	int	R4: D -> proc X id ( M ) { P } 
311	proc	R4: D -> proc X id ( M ) { P } 
311	record	R4: D -> proc X id ( M ) { P } 
311	return	R4: D -> proc X id ( M ) { P } 
311	while	R4: D -> proc X id ( M ) { P } 
311	}	R4: D -> proc X id ( M ) { P } 
312	call	R49: W -> $ 
312	id	R49: W -> $ 
312	if	R49: W -> $ 
312	return	R49: W -> $ 
312	while	R49: W -> $ 
314	}	R19: S -> if B { W S N } R 
315	#	R20: R -> else { W S } 
315	call	R20: R -> else { W S } 
315	float	R20: R -> else { W S } 
315	id	R20: R -> else { W S } 
315	if	R20: R -> else { W S } 
315	int	R20: R -> else { W S } 
315	proc	R20: R -> else { W S } 
315	record	R20: R -> else { W S } 
315	return	R20: R -> else { W S } 
315	while	R20: R -> else { W S } 
317	call	R49: W -> $ 
317	id	R49: W -> $ 
317	if	R49: W -> $ 
317	return	R49: W -> $ 
317	while	R49: W -> $ 
320	call	R20: R -> else { W S } 
320	float	R20: R -> else { W S } 
320	id	R20: R -> else { W S } 
320	if	R20: R -> else { W S } 
320	int	R20: R -> else { W S } 
320	proc	R20: R -> else { W S } 
320	record	R20: R -> else { W S } 
320	return	R20: R -> else { W S } 
320	while	R20: R -> else { W S } 
320	}	R20: R -> else { W S } 
322	}	R20: R -> else { W S } 
